# -*- coding: utf-8 -*-
"""Spam Detection project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XwVU7Loz7wW-Ag7LGMhS9HXbZPejV4Dg
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
from sklearn.feature_extraction.text import  CountVectorizer
from sklearn import svm

df = pd.read_csv('/content/spam.csv',encoding='ISO-8859-1')

df.head()

df.tail()

df.shape

df.size

df.info()

df.describe()

df.drop(columns=['Unnamed: 2','Unnamed: 3','Unnamed: 4'],inplace=True)

df

df=df.rename(columns={'v1':'Target','v2':'Message'})

df.isnull().sum()

df.duplicated().sum()

df.drop_duplicates(keep='first',inplace=True)

df.duplicated().sum()

df.size

encoder=LabelEncoder()
df['Target']=encoder.fit_transform(df['Target'])
df['Target']

df.head()

plt.pie(df['Target'].value_counts(), labels = ['ham', 'spam'], autopct = "%0.2f")
plt.show()

x=df['Message']
y=df['Target']

x

y

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

cv=CountVectorizer()
x_train_cv = cv.fit_transform(x_train)
x_test_cv = cv.transform(x_test)

print(x_train_cv)

lr=LogisticRegression()
lr.fit(x_train_cv,y_train)
prediction_train=lr.predict(x_train_cv)

print("Prediction of train data accuracy score:",accuracy_score(y_train, prediction_train)*100)

prediction_test = lr.predict(x_test_cv)
print("Prediction of test data accuracy score:",accuracy_score(y_test, prediction_test)*100)